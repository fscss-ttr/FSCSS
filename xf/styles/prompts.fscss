
/* str(width should be, "width:") 
str(height should be, "height:")


str(Neumorphism,
"
background: rgba(255,255,255,0.5);
backdrop-filter: blur(20px);
box-shadow: 6px 6px 12px rgba(0,0,0,0.1), -6px -6px 12px rgba(255,255,255,0.7);
border-radius: 12px;
border: 1px solid rgba(255,255,255,0.4);
transition: all 0.3s ease;"
)

str(Soft 3D shadows and highlights_ smooth_ elegant interface, "
background: rgba(255,255,255,0.5);
backdrop-filter: blur(20px);
box-shadow: 6px 6px 12px rgba(0,0,0,0.1), -6px -6px 12px rgba(255,255,255,0.7);
border-radius: 12px;
border: 1px solid rgba(255,255,255,0.4);
transition: all 0.3s ease;"
)

str(Glassmorphism,
"
background: rgba(255,255,255,0.15);
backdrop-filter: blur(25px);
border: 1px solid rgba(255,255,255,0.3);
box-shadow: 0 4px 30px rgba(0,0,0,0.1);
border-radius: 14px;"
)
str(Frosted glass transparency with soft glow and depth, "
background: rgba(255,255,255,0.15);
backdrop-filter: blur(25px);
border: 1px solid rgba(255,255,255,0.3);
box-shadow: 0 4px 30px rgba(0,0,0,0.1);
border-radius: 14px;"
) 

str(Minimalist,
"
background: #fff;
border: 1px solid #e0e0e0;
border-radius: 8px;
box-shadow: 0 2px 6px rgba(0,0,0,0.05);
color: #222;
font-family: 'Inter', sans-serif;"
)
str(Clean_ airy_ focus on content_ simple modern typography, "
background: #fff;
border: 1px solid #e0e0e0;
border-radius: 8px;
box-shadow: 0 2px 6px rgba(0,0,0,0.05);
color: #222;
font-family: 'Inter', sans-serif;"
)
str(DarkMode,
"/* High contrast dark aesthetic with soft glow */
background: #0d1117;
color: #c9d1d9;
border: 1px solid #30363d;
box-shadow: 0 0 12px rgba(0,255,255,0.15);
border-radius: 10px"
)
str(High contrast dark aesthetic with soft glow, "
background: #0d1117;
color: #c9d1d9;
border: 1px solid #30363d;
box-shadow: 0 0 12px rgba(0,255,255,0.15);
border-radius: 10px"
)
 
str(CyberGlow,
"
background: radial-gradient(circle at top left, #021026, #000);
box-shadow: 0 0 12px #00ffff, 0 0 24px #0088ff inset;
border: 1px solid rgba(0,255,255,0.3);
color: #0ff;
text-shadow: 0 0 8px #00ffff;"
)

str(Futuristic neon glow with dark background, "
background: radial-gradient(circle at top left, #021026, #000);
box-shadow: 0 0 12px #00ffff, 0 0 24px #0088ff inset;
border: 1px solid rgba(0,255,255,0.3);
color: #0ff;
text-shadow: 0 0 8px #00ffff;"
)



str(SoftPastel,
"
background: #fef6fb;
border: 1px solid #f3dce8;
box-shadow: 4px 6px 10px rgba(255,182,193,0.2);
border-radius: 16px;
color: #444;"
)

str(Gentle pastel hues and soft shadows_ friendly and calm, "background: #fef6fb;
border: 1px solid #f3dce8;
box-shadow: 4px 6px 10px rgba(255,182,193,0.2);
border-radius: 16px;
color: #444;"
)


str(MaterialYou,
"
background: var(--md-sys-color-surface);
border-radius: 20px;
box-shadow: 0 2px 8px rgba(0,0,0,0.1);
color: var(--md-sys-color-on-surface);
transition: transform 0.25s ease, background 0.3s;"
)

str(Dynamic colors_ rounded corners, playful motion, "
background: var(--md-sys-color-surface);
border-radius: 20px;
box-shadow: 0 2px 8px rgba(0,0,0,0.1);
color: var(--md-sys-color-on-surface);
transition: transform 0.25s ease, background 0.3s;"
)


str(GradientGlow,
"
background: linear-gradient(135deg, #00eaff, #0066ff);
box-shadow: 0 0 20px rgba(0,200,255,0.3);
border-radius: 12px;
color: #fff;
text-shadow: 0 0 6px rgba(0,0,0,0.3);"
)
str(Smooth gradient background with subtle lighting, "
background: linear-gradient(135deg, #00eaff, #0066ff);
box-shadow: 0 0 20px rgba(0,200,255,0.3);
border-radius: 12px;
color: #fff;
text-shadow: 0 0 6px rgba(0,0,0,0.3);"
) 
str(ElegantCard,
"
background: #ffffff;
border-radius: 16px;
box-shadow: 0 4px 12px rgba(0,0,0,0.1);
padding: 20px;
transition: box-shadow 0.3s ease;"
)

str(Professional card design with depth and clarity, "
background: #ffffff;
border-radius: 16px;
box-shadow: 0 4px 12px rgba(0,0,0,0.1);
padding: 20px;
transition: box-shadow 0.3s ease"
)
str(ElegantCard is hovering, "
box-shadow: 0 8px 24px rgba(0,0,0,0.15); ") 
str(PlayfulBubble,
"
background: linear-gradient(135deg, #ffd6ff, #b8c0ff);
border-radius: 50px;
box-shadow: 0 6px 16px rgba(0,0,0,0.1);
color: #333;
font-weight: 500"
)
str(Rounded bubbly style_ colorful and soft for friendly UIs, "background: linear-gradient(135deg, #ffd6ff, #b8c0ff);
border-radius: 50px;
box-shadow: 0 6px 16px rgba(0,0,0,0.1);
color: #333;
font-weight: 500"
)

str(add border, "border: 2px solid #06f")
str(like, ";") 
str(no change to, ";") 
str(let me explain, " ") 
str(and_ , ";")
str(then_, ";") 

str(Modern3D,
"
background: #ffffff;
border-radius: 16px;
box-shadow:
0 10px 25px rgba(0,0,0,0.1),
0 6px 10px rgba(0,0,0,0.08),
inset 0 1px 0 rgba(255,255,255,0.8);
transform: translateY(-2px);
transition: all 0.3s cubic-bezier(0.25, 0.46, 0.45, 0.94);"
)

str(Elevated 3D effect with strong shadows, "
background: #ffffff;
border-radius: 16px;
box-shadow:
0 10px 25px rgba(0,0,0,0.1),
0 6px 10px rgba(0,0,0,0.08),
inset 0 1px 0 rgba(255,255,255,0.8);
transform: translateY(-2px);
transition: all 0.3s cubic-bezier(0.25, 0.46, 0.45, 0.94);"
)

str(Holographic,
"
background: linear-gradient(135deg,
rgba(255,255,255,0.8) 0%,
rgba(255,255,255,0.4) 50%,
rgba(255,255,255,0.8) 100%);
backdrop-filter: blur(15px);
border: 1px solid rgba(255,255,255,0.6);
box-shadow:
0 8px 32px rgba(0,0,0,0.1),
0 0 0 1px rgba(255,255,255,0.3),
inset 0 0 20px rgba(255,255,255,0.5);
border-radius: 12px;"
)

str(Iridescent holographic effect with color shifts, "
background: linear-gradient(135deg,
rgba(255,255,255,0.8) 0%,
rgba(255,255,255,0.4) 50%,
rgba(255,255,255,0.8) 100%);
backdrop-filter: blur(15px);
border: 1px solid rgba(255,255,255,0.6);
box-shadow:
0 8px 32px rgba(0,0,0,0.1),
0 0 0 1px rgba(255,255,255,0.3),
inset 0 0 20px rgba(255,255,255,0.5);
border-radius: 12px;"
)

str(Retros,
"
background: linear-gradient(45deg, #ff0080, #8000ff);
border: 3px solid #00ffff;
box-shadow:
0 0 15px #ff0080,
0 0 30px #8000ff,
inset 0 0 15px rgba(0,255,255,0.3);
border-radius: 0;
color: #ffffff;
font-family: 'Courier New', monospace;"
)

str(Bold neon colors and geometric patterns 80s style, "
background: linear-gradient(45deg, #ff0080, #8000ff);
border: 3px solid #00ffff;
box-shadow:
0 0 15px #ff0080,
0 0 30px #8000ff,
inset 0 0 15px rgba(0,255,255,0.3);
border-radius: 0;
color: #ffffff;
font-family: 'Courier New', monospace;"
)

str(EarthTones,
"
background: #f5f1e8;
border: 1px solid #d4c9b1;
box-shadow:
4px 4px 12px rgba(0,0,0,0.08),
-4px -4px 12px rgba(255,255,255,0.8);
border-radius: 8px;
color: #5a4c3a;
font-family: 'Georgia', serif;"
)

str(Natural organic colors and textures, "
background: #f5f1e8;
border: 1px solid #d4c9b1;
box-shadow:
4px 4px 12px rgba(0,0,0,0.08),
-4px -4px 12px rgba(255,255,255,0.8);
border-radius: 8px;
color: #5a4c3a;
font-family: 'Georgia', serif;"
)

str(FloatEffect,
"
background: rgba(255,255,255,0.95);
backdrop-filter: blur(10px);
border-radius: 20px;
box-shadow:
0 15px 35px rgba(0,0,0,0.1),
0 3px 10px rgba(0,0,0,0.05);
transform: translateY(0);
transition: all 0.4s ease;
animation: float 3s ease-in-out infinite;"
)

str(FloatEffect animation keyframes, "
@keyframes float {
0%, 100% { transform: translateY(0); }
50% { transform: translateY(-10px); }
}"
)

str(Light floating card with subtle animation, "
background: rgba(255,255,255,0.95);
backdrop-filter: blur(10px);
border-radius: 20px;
box-shadow:
0 15px 35px rgba(0,0,0,0.1),
0 3px 10px rgba(0,0,0,0.05);
transform: translateY(0);
transition: all 0.4s ease;
animation: float 3s ease-in-out infinite;"
)

str(Metallic,
"
background: linear-gradient(135deg,
#e0e0e0 0%,
#f5f5f5 50%,
#e0e0e0 100%);
border: 1px solid #c0c0c0;
box-shadow:
0 4px 15px rgba(0,0,0,0.2),
inset 0 1px 0 rgba(255,255,255,0.8),
inset 0 -1px 0 rgba(0,0,0,0.1);
border-radius: 12px;
position: relative;
overflow: hidden;"
)

str(Metallic after pseudo-element, "
&::after {
content: '';
position: absolute;
top: 0;
left: -100%;
width: 50%;
height: 100%;
background: linear-gradient(90deg,
transparent,
rgba(255,255,255,0.4),
transparent);
transform: skewX(-25deg);
transition: left 0.5s;
}"
)

str(Shiny metallic surface with reflection, "
background: linear-gradient(135deg,
#e0e0e0 0%,
#f5f5f5 50%,
#e0e0e0 100%);
border: 1px solid #c0c0c0;
box-shadow:
0 4px 15px rgba(0,0,0,0.2),
inset 0 1px 0 rgba(255,255,255,0.8),
inset 0 -1px 0 rgba(0,0,0,0.1);
border-radius: 12px;"
)

str(Cinematic,
"
background: #1a1a1a;
border: 1px solid #333;
box-shadow:
0 0 30px rgba(255,0,0,0.3),
inset 0 0 50px rgba(0,0,0,0.5);
border-radius: 4px;
color: #fff;
position: relative;
overflow: hidden;"
)

str(Cinematic after glow, "
&::after {
content: '';
position: absolute;
top: 0;
right: 0;
width: 2px;
height: 100%;
background: linear-gradient(to bottom,
transparent,
#ff0000,
transparent);
box-shadow: 0 0 10px #ff0000;
}"
)

str(Dark cinematic style with accent lighting, "
background: #1a1a1a;
border: 1px solid #333;
box-shadow:
0 0 30px rgba(255,0,0,0.3),
inset 0 0 50px rgba(0,0,0,0.5);
border-radius: 4px;
color: #fff;"
)

str(add gradient text, "
background: linear-gradient(45deg, #ff6b6b, #4ecdc4);
-webkit-background-clip: text;
-webkit-text-fill-color: transparent;
background-clip: text;"
)

str(add pulse animation, "
animation: pulse 2s infinite;"
)

str(pulse keyframes, "
@keyframes pulse {
0%, 100% { transform: scale(1); }
50% { transform: scale(1.05); }
}"
)

str(make it responsive, "
width: 100%;
max-width: 100%;
box-sizing: border-box;"
)

str(center content, "
display: flex;
justify-content: center;
align-items: center;
text-align: center;"
)

str(add smooth hover, "
transition: all 0.3s ease;
&:hover {
transform: translateY(-5px);
box-shadow: 0 20px 40px rgba(0,0,0,0.15);
}"
) 


str(BounceIn,
"
animation: bounceIn 0.8s cubic-bezier(0.68, -0.55, 0.265, 1.55);"
)

str(BounceIn keyframes, "
@keyframes bounceIn {
    0% {
        opacity: 0;
        transform: scale(0.3);
    }
    50% {
        opacity: 1;
        transform: scale(1.05);
    }
    70% {
        transform: scale(0.9);
    }
    100% {
        opacity: 1;
        transform: scale(1);
    }
}"
)

str(FadeInUp,
"
animation: fadeInUp 0.6s ease-out;"
)

str(FadeInUp keyframes, "
@keyframes fadeInUp {
    from {
        opacity: 0;
        transform: translateY(30px);
    }
    to {
        opacity: 1;
        transform: translateY(0);
    }
}"
)

str(GlitchEffect,
"
position: relative;
animation: glitch 2s infinite;"
)

str(GlitchEffect keyframes, "
@keyframes glitch {
    0% {
        transform: translate(0);
    }
    20% {
        transform: translate(-2px, 2px);
    }
    40% {
        transform: translate(-2px, -2px);
    }
    60% {
        transform: translate(2px, 2px);
    }
    80% {
        transform: translate(2px, -2px);
    }
    100% {
        transform: translate(0);
    }
}"
)

str(ShakeAnimation,
"
animation: shake 0.5s ease-in-out;"
)

str(ShakeAnimation keyframes, "
@keyframes shake {
    0%, 100% { transform: translateX(0); }
    25% { transform: translateX(-5px); }
    75% { transform: translateX(5px); }
}"
)

str(Spin3D,
"
animation: spin3D 2s linear infinite;"
)

str(Spin3D keyframes, "
@keyframes spin3D {
    from {
        transform: rotateY(0deg);
    }
    to {
        transform: rotateY(360deg);
    }
}"
)

str(MorphGradient,
"
background: linear-gradient(-45deg, #ee7752, #e73c7e, #23a6d5, #23d5ab);
background-size: 400% 400%;
animation: gradientShift 15s ease infinite;"
)

str(MorphGradient keyframes, "
@keyframes gradientShift {
    0% {
        background-position: 0% 50%;
    }
    50% {
        background-position: 100% 50%;
    }
    100% {
        background-position: 0% 50%;
    }
}"
)

str(Typewriter,
"
overflow: hidden;
border-right: 2px solid;
white-space: nowrap;
animation: typing 3s steps(40, end), blink-caret 0.75s step-end infinite;"
)

str(Typewriter keyframes, "
@keyframes typing {
    from { width: 0 }
    to { width: 100% }
}
@keyframes blink-caret {
    from, to { border-color: transparent }
    50% { border-color: #000; }
}"
)

str(BlurIn,
"
animation: blurIn 1s ease-out;"
)

str(BlurIn keyframes, "
@keyframes blurIn {
    from {
        opacity: 0;
        filter: blur(10px);
        transform: scale(1.1);
    }
    to {
        opacity: 1;
        filter: blur(0);
        transform: scale(1);
    }
}"
)

str(SlideInLeft,
"
animation: slideInLeft 0.5s ease-out;"
)

str(SlideInLeft keyframes, "
@keyframes slideInLeft {
    from {
        opacity: 0;
        transform: translateX(-100px);
    }
    to {
        opacity: 1;
        transform: translateX(0);
    }
}"
)

str(ZoomIn,
"
animation: zoomIn 0.4s cubic-bezier(0.175, 0.885, 0.32, 1.275);"
)

str(ZoomIn keyframes, "
@keyframes zoomIn {
    from {
        opacity: 0;
        transform: scale(0.5);
    }
    to {
        opacity: 1;
        transform: scale(1);
    }
}"
)

str(RippleEffect,
"
position: relative;
overflow: hidden;"
)

str(RippleEffect after, "
&::after {
    content: '';
    position: absolute;
    top: 50%;
    left: 50%;
    width: 0;
    height: 0;
    border-radius: 50%;
    background: rgba(255,255,255,0.5);
    transform: translate(-50%, -50%);
    animation: ripple 0.6s ease-out;
}"
)

str(RippleEffect keyframes, "
@keyframes ripple {
    to {
        width: 200px;
        height: 200px;
        opacity: 0;
    }
}"
)

str(StaggerChildren,
"
& > * {
    animation: stagger 0.5s ease-out both;
    animation-delay: calc(var(--stagger-order, 0) * 0.1s);
}"
)

str(StaggerChildren keyframes, "
@keyframes stagger {
    from {
        opacity: 0;
        transform: translateY(20px);
    }
    to {
        opacity: 1;
        transform: translateY(0);
    }
}"
)

str(ParallaxScrolling,
"
background-attachment: fixed;
background-position: center;
background-repeat: no-repeat;
background-size: cover;"
)

str(TextShadowGlow,
"
animation: textGlow 2s ease-in-out infinite alternate;"
)

str(TextShadowGlow keyframes, "
@keyframes textGlow {
    from {
        text-shadow: 0 0 5px #fff, 0 0 10px #fff, 0 0 15px #0073e6, 0 0 20px #0073e6;
    }
    to {
        text-shadow: 0 0 10px #fff, 0 0 20px #fff, 0 0 30px #0073e6, 0 0 40px #0073e6;
    }
}"
)

str(BorderFlow,
"
position: relative;
background: linear-gradient(90deg, #ff0080, #8000ff, #00ffff, #ff0080);
background-size: 400% 400%;
animation: borderFlow 3s linear infinite;"
)

str(BorderFlow keyframes, "
@keyframes borderFlow {
    0% { background-position: 0% 50%; }
    50% { background-position: 100% 50%; }
    100% { background-position: 0% 50%; }
}"
)

str(HoverLift,
"
transition: all 0.3s cubic-bezier(0.25, 0.46, 0.45, 0.94);
&:hover {
    transform: translateY(-8px) scale(1.02);
    box-shadow: 0 20px 40px rgba(0,0,0,0.15);
}"
)

str(HoverColorShift,
"
transition: all 0.4s ease;
&:hover {
    background: linear-gradient(45deg, #667eea, #764ba2);
    color: white;
}"
)

str(Hover3DRotate,
"
transform-style: preserve-3d;
transition: transform 0.6s ease;
&:hover {
    transform: rotateY(15deg) rotateX(10deg);
}"
)

str(FocusGlow,
"
transition: all 0.3s ease;
&:focus {
    box-shadow: 0 0 0 3px rgba(66, 153, 225, 0.5);
    outline: none;
}"
)

str(LoadingSkeleton,
"
background: linear-gradient(90deg, #f0f0f0 25%, #e0e0e0 50%, #f0f0f0 75%);
background-size: 200% 100%;
animation: loading 1.5s infinite;"
)

str(LoadingSkeleton keyframes, "
@keyframes loading {
    0% {
        background-position: 200% 0;
    }
    100% {
        background-position: -200% 0;
    }
}"
)

str(InfiniteScroll,
"
animation: infiniteScroll 20s linear infinite;"
)

str(InfiniteScroll keyframes, "
@keyframes infiniteScroll {
    0% {
        transform: translateX(0);
    }
    100% {
        transform: translateX(-100%);
    }
}"
)

str(ConicGradient,
"
background: conic-gradient(from 0deg, #ff0080, #8000ff, #0080ff, #80ff00, #ff0080);
animation: conicSpin 3s linear infinite;"
)

str(ConicGradient keyframes, "
@keyframes conicSpin {
    to {
        transform: rotate(360deg);
    }
}"
)

str(NeonFlicker,
"
animation: neonFlicker 2s infinite alternate;"
)

str(NeonFlicker keyframes, "
@keyframes neonFlicker {
    0%, 18%, 22%, 25%, 53%, 57%, 100% {
        box-shadow: 0 0 5px #fff, 0 0 10px #fff, 0 0 15px #ff0080, 0 0 20px #ff0080;
    }
    20%, 24%, 55% {
        box-shadow: none;
    }
}"
)

str(add stagger delay 1, "--stagger-order: 1;")
str(add stagger delay 2, "--stagger-order: 2;")
str(add stagger delay 3, "--stagger-order: 3;")
str(add stagger delay 4, "--stagger-order: 4;")

str(add infinite animation, "animation-iteration-count: infinite;")
str(add alternate animation, "animation-direction: alternate;")
str(add paused animation, "animation-play-state: paused;")
str(add running animation, "animation-play-state: running;")

str(add animation delay, "animation-delay: 0.5s;")
str(add animation duration, "animation-duration: 1s;")
str(add animation fill mode, "animation-fill-mode: both;")

str(add transform origin, "transform-origin: center;")
str(add perspective, "perspective: 1000px;")
str(add will change, "will-change: transform, opacity;")


str(FixedTopMenu,
"
position: fixed;
top: 0;
left: 0;
right: 0;
z-index: 1000;
background: rgba(255,255,255,0.95);
backdrop-filter: blur(20px);
border-bottom: 1px solid rgba(0,0,0,0.1);
padding: 1rem 2rem;
display: flex;
justify-content: space-between;
align-items: center;"
)

str(Fixed top navigation bar, "
position: fixed;
top: 0;
left: 0;
right: 0;
z-index: 1000;
background: rgba(255,255,255,0.95);
backdrop-filter: blur(20px);
border-bottom: 1px solid rgba(0,0,0,0.1);
padding: 1rem 2rem;
display: flex;
justify-content: space-between;
align-items: center;"
)

str(FixedSideMenu,
"
position: fixed;
left: 0;
top: 0;
bottom: 0;
width: 280px;
z-index: 999;
background: rgba(255,255,255,0.95);
backdrop-filter: blur(20px);
border-right: 1px solid rgba(0,0,0,0.1);
padding: 2rem 1.5rem;
overflow-y: auto;
transition: transform 0.3s ease;"
)

str(Fixed left side navigation panel, "
position: fixed;
left: 0;
top: 0;
bottom: 0;
width: 280px;
z-index: 999;
background: rgba(255,255,255,0.95);
backdrop-filter: blur(20px);
border-right: 1px solid rgba(0,0,0,0.1);
padding: 2rem 1.5rem;
overflow-y: auto;
transition: transform 0.3s ease;"
)

str(FixedRightMenu,
"
position: fixed;
right: 0;
top: 0;
bottom: 0;
width: 320px;
z-index: 999;
background: rgba(255,255,255,0.95);
backdrop-filter: blur(20px);
border-left: 1px solid rgba(0,0,0,0.1);
padding: 2rem 1.5rem;
overflow-y: auto;
transition: transform 0.3s ease;"
)

str(Fixed right side panel, "
position: fixed;
right: 0;
top: 0;
bottom: 0;
width: 320px;
z-index: 999;
background: rgba(255,255,255,0.95);
backdrop-filter: blur(20px);
border-left: 1px solid rgba(0,0,0,0.1);
padding: 2rem 1.5rem;
overflow-y: auto;
transition: transform 0.3s ease;"
)

str(FixedBottomMenu,
"
position: fixed;
bottom: 0;
left: 0;
right: 0;
z-index: 1000;
background: rgba(255,255,255,0.95);
backdrop-filter: blur(20px);
border-top: 1px solid rgba(0,0,0,0.1);
padding: 1rem 2rem;
display: flex;
justify-content: space-around;
align-items: center;"
)

str(Fixed bottom navigation bar, "
position: fixed;
bottom: 0;
left: 0;
right: 0;
z-index: 1000;
background: rgba(255,255,255,0.95);
backdrop-filter: blur(20px);
border-top: 1px solid rgba(0,0,0,0.1);
padding: 1rem 2rem;
display: flex;
justify-content: space-around;
align-items: center;"
)

str(MenuToggleButton,
"
width: 40px;
height: 40px;
border: none;
background: transparent;
cursor: pointer;
display: flex;
flex-direction: column;
justify-content: center;
align-items: center;
gap: 4px;
padding: 8px;
border-radius: 8px;
transition: all 0.3s ease;"
)

str(Hamburger menu toggle button, "
width: 40px;
height: 40px;
border: none;
background: transparent;
cursor: pointer;
display: flex;
flex-direction: column;
justify-content: center;
align-items: center;
gap: 4px;
padding: 8px;
border-radius: 8px;
transition: all 0.3s ease;"
)

str(MenuToggleLine,
"
width: 24px;
height: 2px;
background: #333;
transition: all 0.3s ease;
transform-origin: center;"
)

str(Hamburger menu line, "
width: 24px;
height: 2px;
background: #333;
transition: all 0.3s ease;
transform-origin: center;"
)

str(MenuToggleButton is active,
"background: rgba(0,0,0,0.1);"
)

str(MenuToggleLine top is active,
"transform: rotate(45deg) translate(6px, 6px);"
)

str(MenuToggleLine middle is active,
"opacity: 0;"
)

str(MenuToggleLine bottom is active,
"transform: rotate(-45deg) translate(6px, -6px);"
)

str(SideMenuList,
"
list-style: none;
padding: 0;
margin: 2rem 0 0 0;
display: flex;
flex-direction: column;
gap: 0.5rem;"
)

str(Side menu navigation list, "
list-style: none;
padding: 0;
margin: 2rem 0 0 0;
display: flex;
flex-direction: column;
gap: 0.5rem;"
)

str(MenuListItem,
"
padding: 0.75rem 1rem;
border-radius: 8px;
cursor: pointer;
transition: all 0.2s ease;
display: flex;
align-items: center;
gap: 0.75rem;
color: #333;
text-decoration: none;
font-weight: 500;"
)

str(Individual menu list item, "
padding: 0.75rem 1rem;
border-radius: 8px;
cursor: pointer;
transition: all 0.2s ease;
display: flex;
align-items: center;
gap: 0.75rem;
color: #333;
text-decoration: none;
font-weight: 500;"
)

str(MenuListItem is hovering,
"background: rgba(0,0,0,0.05);
transform: translateX(4px);"
)

str(MenuListItem is active,
"background: rgba(0,100,255,0.1);
color: #0066ff;
border-left: 3px solid #0066ff;"
)

str(FormContainer,
"
background: #ffffff;
border-radius: 16px;
padding: 2rem;
box-shadow: 0 4px 20px rgba(0,0,0,0.08);
max-width: 500px;
margin: 0 auto;"
)

str(Form container styling, "
background: #ffffff;
border-radius: 16px;
padding: 2rem;
box-shadow: 0 4px 20px rgba(0,0,0,0.08);
max-width: 500px;
margin: 0 auto;"
)

str(FormGroup,
"
margin-bottom: 1.5rem;
display: flex;
flex-direction: column;
gap: 0.5rem;"
)

str(Form input group, "
margin-bottom: 1.5rem;
display: flex;
flex-direction: column;
gap: 0.5rem;"
)

str(FormLabel,
"
font-weight: 600;
color: #333;
font-size: 0.9rem;
margin-bottom: 0.25rem;"
)

str(Form label styling, "
font-weight: 600;
color: #333;
font-size: 0.9rem;
margin-bottom: 0.25rem;"
)

str(FormInput,
"
padding: 0.75rem 1rem;
border: 2px solid #e0e0e0;
border-radius: 8px;
font-size: 1rem;
transition: all 0.3s ease;
background: #fff;
color: #333;"
)

str(Text input field styling, "
padding: 0.75rem 1rem;
border: 2px solid #e0e0e0;
border-radius: 8px;
font-size: 1rem;
transition: all 0.3s ease;
background: #fff;
color: #333;"
)

str(FormInput is focusing,
"border-color: #0066ff;
box-shadow: 0 0 0 3px rgba(0,102,255,0.1);
outline: none;"
)

str(FormInput is invalid,
"border-color: #ff4444;
box-shadow: 0 0 0 3px rgba(255,68,68,0.1);"
)

str(FormTextarea,
"
padding: 0.75rem 1rem;
border: 2px solid #e0e0e0;
border-radius: 8px;
font-size: 1rem;
transition: all 0.3s ease;
background: #fff;
color: #333;
min-height: 120px;
resize: vertical;
font-family: inherit;"
)

str(Textarea styling, "
padding: 0.75rem 1rem;
border: 2px solid #e0e0e0;
border-radius: 8px;
font-size: 1rem;
transition: all 0.3s ease;
background: #fff;
color: #333;
min-height: 120px;
resize: vertical;
font-family: inherit;"
)

str(FormSelect,
"
padding: 0.75rem 1rem;
border: 2px solid #e0e0e0;
border-radius: 8px;
font-size: 1rem;
transition: all 0.3s ease;
background: #fff;
color: #333;
appearance: none;
background-image: url('data:image/svg+xml;utf8,<svg fill=\"%23333\" viewBox=\"0 0 24 24\"><path d=\"M7 10l5 5 5-5z\"/></svg>');
background-repeat: no-repeat;
background-position: right 12px center;
background-size: 16px;"
)

str(Select dropdown styling, "
padding: 0.75rem 1rem;
border: 2px solid #e0e0e0;
border-radius: 8px;
font-size: 1rem;
transition: all 0.3s ease;
background: #fff;
color: #333;
appearance: none;
background-image: url('data:image/svg+xml;utf8,<svg fill=\"%23333\" viewBox=\"0 0 24 24\"><path d=\"M7 10l5 5 5-5z\"/></svg>');
background-repeat: no-repeat;
background-position: right 12px center;
background-size: 16px;"
)

str(FormButton,
"
padding: 0.75rem 2rem;
background: #0066ff;
color: white;
border: none;
border-radius: 8px;
font-size: 1rem;
font-weight: 600;
cursor: pointer;
transition: all 0.3s ease;
display: inline-flex;
align-items: center;
justify-content: center;
gap: 0.5rem;"
)

str(Form submit button, "
padding: 0.75rem 2rem;
background: #0066ff;
color: white;
border: none;
border-radius: 8px;
font-size: 1rem;
font-weight: 600;
cursor: pointer;
transition: all 0.3s ease;
display: inline-flex;
align-items: center;
justify-content: center;
gap: 0.5rem;"
)

str(FormButton is hovering,
"background: #0052cc;
transform: translateY(-2px);
box-shadow: 0 4px 12px rgba(0,102,255,0.3);"
)

str(FormButton is active,
"transform: translateY(0);
box-shadow: 0 2px 6px rgba(0,102,255,0.3);"
)

str(FormButton secondary,
"background: transparent;
color: #666;
border: 2px solid #e0e0e0;"
)

str(FormButton secondary is hovering,
"background: #f5f5f5;
border-color: #ccc;"
)

str(CheckboxGroup,
"
display: flex;
align-items: center;
gap: 0.75rem;
cursor: pointer;
padding: 0.5rem 0;"
)

str(Checkbox container, "
display: flex;
align-items: center;
gap: 0.75rem;
cursor: pointer;
padding: 0.5rem 0;"
)

str(CheckboxInput,
"
width: 18px;
height: 18px;
border: 2px solid #e0e0e0;
border-radius: 4px;
background: #fff;
transition: all 0.2s ease;
position: relative;
cursor: pointer;"
)

str(Custom checkbox, "
width: 18px;
height: 18px;
border: 2px solid #e0e0e0;
border-radius: 4px;
background: #fff;
transition: all 0.2s ease;
position: relative;
cursor: pointer;"
)

str(CheckboxInput is checked,
"background: #0066ff;
border-color: #0066ff;"
)

str(CheckboxInput is checked after,
"content: '';
position: absolute;
left: 5px;
top: 2px;
width: 4px;
height: 8px;
border: solid white;
border-width: 0 2px 2px 0;
transform: rotate(45deg);"
)

str(RadioGroup,
"
display: flex;
flex-direction: column;
gap: 0.5rem;"
)

str(Radio button group, "
display: flex;
flex-direction: column;
gap: 0.5rem;"
)

str(RadioOption,
"
display: flex;
align-items: center;
gap: 0.75rem;
cursor: pointer;
padding: 0.5rem;"
)

str(Radio option container, "
display: flex;
align-items: center;
gap: 0.75rem;
cursor: pointer;
padding: 0.5rem;"
)

str(RadioInput,
"/* Custom radio button */
width: 18px;
height: 18px;
border: 2px solid #e0e0e0;
border-radius: 50%;
background: #fff;
transition: all 0.2s ease;
position: relative;
cursor: pointer;"
)

str(Custom radio button, "
width: 18px;
height: 18px;
border: 2px solid #e0e0e0;
border-radius: 50%;
background: #fff;
transition: all 0.2s ease;
position: relative;
cursor: pointer;"
)

str(RadioInput is checked,
"border-color: #0066ff;"
)

str(RadioInput is checked after,
"content: '';
position: absolute;
top: 3px;
left: 3px;
width: 8px;
height: 8px;
border-radius: 50%;
background: #0066ff;"
)

str(FormError,
"
color: #ff4444;
font-size: 0.85rem;
margin-top: 0.25rem;
display: flex;
align-items: center;
gap: 0.5rem;"
)

str(Form error message, "
color: #ff4444;
font-size: 0.85rem;
margin-top: 0.25rem;
display: flex;
align-items: center;
gap: 0.5rem;"
)

str(FormSuccess,
"
color: #00c851;
font-size: 0.85rem;
margin-top: 0.25rem;
display: flex;
align-items: center;
gap: 0.5rem;"
)

str(Form success message, "
color: #00c851;
font-size: 0.85rem;
margin-top: 0.25rem;
display: flex;
align-items: center;
gap: 0.5rem;"
)

str(Form dark mode,
"background: #1a1a1a;
color: #fff;
border-color: #333;"
)

str(Input dark mode,
"background: #2d2d2d;
color: #fff;
border-color: #444;"
)

str(Button dark mode,
"background: #0066ff;
color: #fff;"
)
str(Typing animation, "exec(_log, 'do you mean Typewriter')")
*/

